package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"go-graphql-service/graph/generated"
)

// Opening is the resolver for the opening field.
func (r *queryResolver) Opening(ctx context.Context) (*string, error) {
	data := "the game open is the first 20 moves of the game these are often the most studied and analyzed moves in the game"
	return &data, nil
}

// Midgame is the resolver for the midgame field.
func (r *queryResolver) Midgame(ctx context.Context) (*string, error) {
	data := "mid game is the phase of the game where the opening has ended and the endgame has not yet begun"
	return &data, nil
}

// Endgame is the resolver for the endgame field.
func (r *queryResolver) Endgame(ctx context.Context) (*string, error) {
	data := "endgame is the final phase of the game where the board is mostly empty and the remaining pieces are used to try and checkmate the opponent"
	return &data, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
